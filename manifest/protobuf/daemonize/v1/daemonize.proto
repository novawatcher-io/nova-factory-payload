syntax = "proto3";
package daemonize.grpc.v1;
option go_package = "daemonize/grpc/v1";

message NetworkConfig {
  // ip
  string host = 1;
  // 端口
  uint32 port = 2;
}

// CGroup 配置，限制CPU内存
message CGroupConfig {
  // 内存限制
  float memory = 1;
  // cpu限制
  float cpu = 2;
  // 启用/禁用
  bool enabled = 3;
  // 限制策略名称
  string name = 4;
}

message ProcessConfig {
  // 进程名字 (*)
  string process_name = 1;
  // 启动命令 (*)
  string command = 2;
  // 自动重启
  bool autostart = 3;
  // 启动用户
  string user = 4;
  // 启动进程数
  uint32 numprocs = 5;
  // 停止信号
  int64 stop_signal = 6;
  // 停止信号发出后默认等待多久，超时后直接kill
  uint64 stop_wait_secs = 7;
  // 是否停止整个进程组
  bool stop_as_group = 8;
  // 标准错误输出是否重定向
  bool redirect_stderr = 9;
  // 标注输出位置
  string stdout_logfile = 10;
  // 是否启动
  bool enabled = 11;
  // 限制策略
  CGroupConfig cgroup = 12;
  // 配置内容
  string config = 13;
  // 配置路径 (*)
  string config_path = 14;
  // 配置版本
  string config_version = 15;
}

message HttpHealthConfig {
  // 监控检查地址
  string path = 1;
}

message HttpMetricConfig {
  // metric地址
  string path = 1;
}

message HttpServerConfig {
  // http服务器ip
  string host = 1;
  // http服务器端口
  uint32 port = 2;
  // 健康检查配置
  HttpHealthConfig health_config = 3;
  // 指标配置
  HttpMetricConfig http_metric_config = 4;
}

message ReloadConfig {
  // 重载配置时间
  uint32 timeout = 5;
}

message ManagerConfig {
  // 服务器地址 (*)
  NetworkConfig network = 1;
  // 进程列表
  repeated ProcessConfig service = 2;
  // 日志等级
  string log_level = 3;
  // 全局限制策略
  CGroupConfig cgroup = 4;
  string cgroups_hierarchy = 5;
  // http服务器配置
  HttpServerConfig http_server = 6;
  // 重载配置
  ReloadConfig reload = 7;
  // 公司uuid, 不支持运行时更新, 需要停止服务更新
  string company_uuid = 8;
  // 版本, 不支持运行时更新, 需要停止服务更新
  string version = 9;
  // 日志保存路径, 有两个特殊值: 'stdout': 标准输出, 'syslog': 系统日志; 其他值必须是绝对路径;
  string log_path = 10;
  // watchermen进入daemon模式; 不支持运行时更新, 需要停止服务更新
  bool daemon = 11;
  // 上报ip时优先考虑的网卡, 如果该网口不存在, 则使用随机值; 不支持运行时更新, 需要停止服务更新
  string network_interface = 12;
}